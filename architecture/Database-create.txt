drop table artefacts cascade constraints
/
drop table ARTEFACTS_CLASSES cascade constraints
/
drop table ARTEFACTS_MATERIALS cascade constraints
/
drop table ARTEFACTS_ROLES cascade constraints
/
drop table ARTEFACTS_SUB_CATEGORIES cascade constraints
/
drop table ARTEFACTS_TAGS cascade constraints
/
drop table CATEGORIES cascade constraints
/
drop table CLASSES cascade constraints
/
drop table MATERIALS cascade constraints
/
drop table roles cascade constraints
/
drop table SUB_CATEGORIES cascade constraints
/
drop table tags cascade constraints
/
drop table users cascade constraints
/
drop table USERS_CLASSES cascade constraints
/
create table USERS
(
	ID NUMBER(5) not null
		constraint USERS_PK
			primary key,
	PASS VARCHAR2(100) not null,
	EMAIL VARCHAR2(100) not null,
	NAME VARCHAR2(100) not null,
	PROFILE_IMAGE BLOB
)
/

create or replace trigger USER_INC
	before insert
	on 	USERS
	for each row
BEGIN
    <<COLUMN_SEQUENCES>>
    BEGIN
      IF INSERTING AND :NEW.ID IS NULL THEN
        select nvl(max(id),0)+1 into :new.Id from users;
      END IF;
    END COLUMN_SEQUENCES;
  end;
/

create table CLASSES
(
	ID NUMBER(5) not null
		constraint CLASSES_PK
			primary key,
	CLASS_NAME VARCHAR2(100) not null
)
/

create or replace trigger CLASS_INC
	before insert
	on 	CLASSES
	for each row
BEGIN
    <<COLUMN_SEQUENCES>>
    BEGIN
      IF INSERTING AND :NEW.ID IS NULL THEN
        select nvl(max(id),0)+1 into :new.Id from classes;
      END IF;
    END COLUMN_SEQUENCES;
  end;
/

create table ARTEFACTS
(
	ID NUMBER(5) not null
		constraint ARTEFACTS_PK
			primary key,
	ARTEFACT_NAME VARCHAR2(100) not null,
	ID_USER NUMBER(5) not null
		constraint ARTEFACTS_FK
			references USERS
				on delete cascade,
	AUTHOR_NAME VARCHAR2(100) not null,
	DATING VARCHAR2(100) not null,
	PRICE NUMBER(5) not null,
	DESCRIPTION VARCHAR2(1000),
	ORIGIN VARCHAR2(100),
	LATITUDE NUMBER(5,2),
	LONGITUDE NUMBER(5,2),
	ARTEFACT_IMAGE BLOB,
	UTILIZATION_LICENSE NUMBER(1)
)
/

create or replace trigger ARTEFACT_INC
	before insert
	on 	ARTEFACTS
	for each row
BEGIN
    <<COLUMN_SEQUENCES>>
    BEGIN
      IF INSERTING AND :NEW.ID IS NULL THEN
        select nvl(max(id),0)+1 into :new.Id from artefacts;
      END IF;
    END COLUMN_SEQUENCES;
  end;
/

create table TAGS
(
	ID NUMBER(5) not null
		constraint TAGS_PK
			primary key,
	TAG_NAME VARCHAR2(100) not null
)
/

create or replace trigger TAG_INC
	before insert
	on 	TAGS
	for each row
BEGIN
    <<COLUMN_SEQUENCES>>
    BEGIN
      IF INSERTING AND :NEW.ID IS NULL THEN
        select nvl(max(id),0)+1 into :new.Id from tags;
      END IF;
    END COLUMN_SEQUENCES;
  end;
/

create table CATEGORIES
(
	ID NUMBER(5) not null
		constraint CATEGORIES_PK
			primary key,
	CATEGORY_NAME VARCHAR2(100) not null
)
/

create or replace trigger CATEGORY_INC
	before insert
	on 	CATEGORIES
	for each row
BEGIN
    <<COLUMN_SEQUENCES>>
    BEGIN
      IF INSERTING AND :NEW.ID IS NULL THEN
        select nvl(max(id),0)+1 into :new.Id from categories;
      END IF;
    END COLUMN_SEQUENCES;
  end;
/

create table SUB_CATEGORIES
(
	ID NUMBER(5) not null
		constraint SUBCAT_PK
			primary key,
	SUB_CATEGORY_NAME VARCHAR2(100) not null,
	PARENT_ID NUMBER(5) not null
		constraint SUBCAT_FK
			references CATEGORIES
				on delete cascade
)
/

create or replace trigger SUB_CATEGORY_INC
	before insert
	on 	SUB_CATEGORIES
	for each row
BEGIN
    <<COLUMN_SEQUENCES>>
    BEGIN
      IF INSERTING AND :NEW.ID IS NULL THEN
        select nvl(max(id),0)+1 into :new.Id from sub_categories;
      END IF;
    END COLUMN_SEQUENCES;
  end;
/

create table MATERIALS
(
	ID NUMBER(5) not null
		constraint MATERIALS_PK
			primary key,
	MATERIAL_NAME VARCHAR2(100)
)
/

create or replace trigger MATERIAL_INC
	before insert
	on 	MATERIALS
	for each row
BEGIN
    <<COLUMN_SEQUENCES>>
    BEGIN
      IF INSERTING AND :NEW.ID IS NULL THEN
        select nvl(max(id),0)+1 into :new.Id from materials;
      END IF;
    END COLUMN_SEQUENCES;
  end;
/

create table USERS_CLASSES
(
	ID_USER NUMBER(5)
		constraint USR_CLS_FK
			references USERS
				on delete cascade,
	ID_CLASS NUMBER(5)
		constraint USR_CLS2_FK
			references CLASSES
				on delete cascade
)
/

create table ARTEFACTS_SUB_CATEGORIES
(
	ID_ARTEFACT NUMBER(5)
		constraint ART_CAT_FK
			references ARTEFACTS
				on delete cascade,
	ID_SUB_CATEGORY NUMBER(5)
		constraint ART_CAT2_FK
			references SUB_CATEGORIES
				on delete cascade
)
/

create table ARTEFACTS_MATERIALS
(
	ID_ARTEFACT NUMBER(5)
		constraint ART_MAT_FK
			references ARTEFACTS
				on delete cascade,
	ID_MATERIAL NUMBER(5)
		constraint ART_MAT2_FK
			references MATERIALS
				on delete cascade
)
/

create table ARTEFACTS_TAGS
(
	ID_ARTEFACT NUMBER(5)
		constraint ART_TAG_FK
			references ARTEFACTS
				on delete cascade,
	ID_TAG NUMBER(5)
		constraint ART_TAG2_FK
			references TAGS
				on delete cascade
)
/

create table ROLES
(
	ID NUMBER(5) not null
		constraint ROLES_PK
			primary key,
	ROLE_NAME VARCHAR2(100)
)
/

create or replace trigger ROLE_INC
	before insert
	on 	ROLES
	for each row
BEGIN
    <<COLUMN_SEQUENCES>>
    BEGIN
      IF INSERTING AND :NEW.ID IS NULL THEN
        select nvl(max(id),0)+1 into :new.Id from roles;
      END IF;
    END COLUMN_SEQUENCES;
  end;
/

create table ARTEFACTS_ROLES
(
	ID_ARTEFACT NUMBER(5)
		constraint ART_ROL1_FK
			references ARTEFACTS
				on delete cascade,
	ID_ROLE NUMBER(5)
		constraint ART_ROL2_FK
			references ROLES
				on delete cascade
)
/

create table ARTEFACTS_CLASSES
(
	ID_ARTEFACT NUMBER(5)
		constraint ART_CLS1_FK
			references ARTEFACTS
				on delete cascade,
	ID_CLASS NUMBER(5)
		constraint ART_CLS2_FK
			references CLASSES
				on delete cascade
)
/

